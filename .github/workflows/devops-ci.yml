name: DevOps CI Pipeline

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: read

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      # ---------- 1️⃣ Checkout DevOps repo ----------
      - name: Checkout DevOps Repo
        uses: actions/checkout@v4

      # ---------- 2️⃣ Clone Frontend & Backend ----------
      - name: Clone Frontend Repo
        run: |
          git clone https://${{ secrets.GITHUB_TOKEN }}@github.com/Elilaw179/bejitetest.git ./Bejitetest

      - name: Clone Backend Repo
        run: |
          git clone https://${{ secrets.GITHUB_TOKEN }}@github.com/solprogroup/Bejite_UX_2025.git ./Bejite_UX_2025

      # ---------- 3️⃣ Set up Docker ----------
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # ---------- 4️⃣ Build and Run Containers ----------
      - name: Build and Run Services
        run: |
          docker compose -f docker-compose.ci.yml up --build -d
          echo "✅ All containers started successfully"
          docker ps -a

      # ---------- 5️⃣ Wait for DB health check ----------
      - name: Wait for Database to be healthy
        run: |
          echo "⏳ Waiting for PostgreSQL to be ready..."
          sleep 15
          docker logs $(docker ps -qf name=db) || true

      # ---------- 6️⃣ Verify Connectivity ----------
      - name: Verify Backend Connection to DB
        run: |
          docker logs $(docker ps -qf name=backend) | grep PostgreSQL || true

      # ---------- 7️⃣ Run optional integration tests ----------
      # (You can add curl or test commands here if needed)

      # ---------- 8️⃣ Teardown ----------
      - name: Stop and Clean Up
        if: always()
        run: |
          docker compose -f docker-compose.ci.yml down -v
